// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}



model User {
  id String @id 
  email String @unique
  password String @unique
  role String
  
}



model Aluno {
id String @id @default(uuid())
avatar Bytes? 
username String
email String @unique
telefone String
parent_name String
telefone_parent_1 String
telefone_parent_2 String
password String @unique
role String
matricula String @unique
turma String 
quiz Quiz[]
salas Salas_Alunos[]

}
model Coordenador {
id String @id @default(uuid())
username String
avatar Bytes? 
password String @unique
role String
telefone1 String 
telefone2 String
email String @unique
email_profissional String @unique
endereco String 
cep String @unique



turmas Turmas[]
}
model Professor {
 id String @id @default(uuid())
 avatar Bytes? 
 username String
 email String @unique
 email_profissional String @unique
 cpf String?
 endereco String
 titulacao String
 telefone1 String @unique
 telefone2 String @unique
 password String @unique
 subject String 
 role String
 quiz Quiz[]
 questoes Questao[]
 posts Post[]  
 sala Salas[]
}

model Post{
  id String @id @default(uuid())
  idProfessor String
  professor Professor @relation(fields: [idProfessor] , references: [id])

}
model Comments{
  id String @id @default(uuid())
}



model Turmas {
    id String @id @default(uuid())
    salas Salas[]
    idCoordenador String
    coordenador Coordenador? @relation(fields: [idCoordenador] , references: [id])
    name String @unique
}
model Salas {
    id String @id @default(uuid())
    avatar Bytes?
    idTurma String
    turma Turmas @relation(fields: [idTurma] , references: [id])
    alunos Salas_Alunos[]
    idProfessor String?
    professor Professor? @relation(fields: [idProfessor] , references: [id])
    name String @unique
}
model Questao{
 id String @id @default(uuid())
 title String @db.VarChar(200)
 text String @db.LongText
 subject String
 imageBase64 Bytes?
 alternativa1 String? @db.LongText
 alternativa2 String? @db.LongText
 alternativa3 String? @db.LongText
 alternativa4 String? @db.LongText
 alternativa5 String? @db.LongText
 resposta String? @db.LongText
 
  quiz Quiz @relation(fields: [idQuiz] , references: [id])
  idQuiz String
  idProfessor String
  professor Professor @relation(fields: [idProfessor] , references: [id])

}
model Quiz{
  id String @id @default(uuid())
  subject String
  questoes Questao[]
  qtdQuestao String
  professor Professor @relation(fields: [idProfessor] , references: [id])
  aluno Aluno @relation(fields: [idAluno] , references: [id])
  idProfessor String
  idAluno String

}
model OtpUser{
  id String @id
  email String @unique
  otpCode String 
}


model Salas_Alunos {
  idAluno String
  aluno Aluno? @relation(fields: [idAluno], references: [id])
  idSala String
  sala Salas? @relation(fields: [idSala], references: [id])
  @@id([idAluno, idSala])

}
